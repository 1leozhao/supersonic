# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        update: true
        install: >-
          make
          wget
          zip
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install Dependencies
      run: >
        pacman -Syu &&
        pacman --noconfirm -S mingw-w64-x86_64-toolchain mingw-w64-x86_64-mpv

    - name: Build
      run: go build

    - name: Install Fyne tool
      run: go install fyne.io/fyne/v2/cmd/fyne@latest

    - name: Package
      run: make package_windows

    - name: Download mpv dll
      run: >
        wget https://github.com/dweymouth/supersonic/releases/download/v0.8.0/Supersonic-0.8.0-windows-x64.zip &&
        mv Supersonic.exe Supersonic-newbuild.exe &&
        unzip Supersonic-0.8.0-windows-x64.zip &&
        rm Supersonic.exe &&
        mv Supersonic-newbuild.exe Supersonic.exe

    - name: Generate zip bundle
      run: zip Supersonic-windows.zip Supersonic.exe libmpv-2.dll

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Supersonic_windows_x64.zip
        path: Supersonic-windows.zip
